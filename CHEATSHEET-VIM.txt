----------------------------------
CHEATSHEET - VIM
----------------------------------

Most of these are defaults but some may be custom based off vimrc.


----------------------------------
COMMAND MODE
----------------------------------
(for commands that start with colon, the below is case sensitive)
- :q OR Ctrl + W, then Q        = quit
- q:                            = command-line window (commands)
- q/                            = command-line window (searches) (/Enter = perform last search foward; ?Enter = perform last search backward)
- :! <command>                  = execute bash command and then return to Vim after presseng Enter
- :%s/<search_string>/<replace_string>/g = search and replace all occurrances
- :%s///gn                      = show number of instances of word cursor is on
- :g//                          = show the lines for the last pattern search (can use this to Google how to pipe to file)
- :<v>split                     = viewport (open another window of same file), Ctrl + W then Q = close window
- :w !sudo tee %                = save file by calling tee if you didn't start vi using sudo (this doesn't actually save via Vim and thus will give you a W12 warning and state file hasn't been written when attempting to quit; undoing all changes, quitting, and reopening the file after the command will show it has actually been changed)
- :noh                          = no highlight
- .                             = repeat previous command (remember you can scroll up/down past commands/searches)
-----------------
- Shift + 3                     = search the current word backward (cursor starts at last occurence; N = backward; Shift + N = forward)
- Shift + 8                     = search the current word forward (cursor starts at next occurence; N = forward; Shift + N = backward)
- Ctrl + E/Y                    = move screen down/up one line (cursor does not move)
- Ctrl + D/U                    = half page down/up
- Ctrl + F/B                    = page down/up
- Shift + M                     = jump to middle of screen
- J OR Ctrl + N                 = down, K OR Ctrl + P = up, H = left, L = right (#H/J/K/L or any operation repeats the operation that # of times)
- 0                             = beginning of line (including whitespace)
- Shift + 6                     = beginning of line (excluding whitespace)
- Shift + 4                     = end of line
- B                             = back to beginning of word
- W                             = forward to beginning of word
- E                             = forward to end of word (hold to skip)
- G                             = end line of file
- GG                            = top line of file
- GD                            = goto definition (in same file)
- <#> + Shift + G               = jump to line #
- ' + '                         = return to line where cursor was before last jump
- Shift + G                     = bottom line of file
- Ctrl + G                      = see what the name fo the file open is
- U                             = undo
- Ctrl + R                      = redo
- DW                            = cut from cursor to end of word, DB = cut backward
- D<number><J/K>                = cut number of lines plus one down/up
- Shift + J                     = delete blank line (must be on blank line)
- DD                            = cut line
- X                             = delete one character
- Shift + X                     = backspace
- Shift + >>                    = indent forward
- Shift + <<                    = indent backward
- YY                            = yank/copy a line
- Shift + P                     = paste above current line
- P                             = paste after current line
- .                             = paste what was last written in insert mode
- /pattern                      = search forward for pattern (?pattern for backwards search), N = next, Shift + N = back
- "+YY                          = yank to global cut buffer (+) (" is used to specify a register to use), "+P = paste from global cut buffer (command mode, but it won't show as a command because you don't type a colon first)
- `<number>                     = jump to position in previous file edited (this is registered in the viminfo file once a file is viewed/edited and closed, but only if a mark/`# is NOT used to jump to another file; i.e. opening a file, jumping using a mark, and then closing doesn't register the opened file into the viminfo list) (each time a new file is entered into the viminfo list, again, via not using a mark jump, the files shift: 0>1>2>3>4>5>6>7>8>9)
- M <letter>                    = set a mark at column/line in current file, ' + <letter> = visit beginning of line of mark (if another vim window with the same file is open via split these will be remembered even if the current window is closed and reopened)
- Q + <letter> + Q              = record a sequence to a register, @<letter> to recall as a command, Q + <register_letter> + Q = delete/blank the register
-----------------


----------------------------------
INSERT MODE
----------------------------------
- A                             = append after cursor
- Shift + A                     = append at end of line (Command Mode > Insert Mode)
- I                             = insert before cursor
- Shift + I                     = insert at beginning of line
- S                             = substitute the cursor's character with new ones
- Shift + S                     = substitute entire line (Command Mode > Insert Mode)
- Shift + S                     = substitute entire line
- O                             = create new line below and enter insert mode
- Ctrl + O                      = (while in insert mode) exit normal mode to perform one action then re-enter insert mode (good for skipping back/forward a letter/word)
- Ctrl + O                      = create new line above and enter insert mode
- Ctrl + T                      = indent forward, Ctrl + D indent backward
- Ctrl + W                      = delete last word
- Ctrl + H                      = backspace
- Ctrl + C                      = exit insert mode
- JJ                            = exit insert mode (if the following is in .vimrc: imap jj <ESC>)
-----------------


----------------------------------
VISUAL MODE
----------------------------------
- V                             = Visual Character Mode
- Shift + V                     = Visual Line Mode
- Ctrl + V                      = Visual Block Mode
- If mouse is used to select lines Visual Mode is used, but this can be changed to Visual Block Mode via Ctrl + V
- VIW                           = visually select inner word; YIW = visually yank inner word (use when replacing a single variable/word; use Ctrl + V > W for multi-variable/word replacement)
- Visual Block Mode > highlight lines > Shift + I > Insert Mode > # > Esc (Ctrl + C or, if set, JJ) = comment multiple lines (decomment = X instead of Shift + I)
- < OR >                        = indent block back or forward (need to type colon first if in Block Mode)
- Select text > u/U             = lowercase or uppercase
-----------------


----------------------------------
PYTHON JEDI
----------------------------------
- Ctrl + Space                  = autocompletion (or Ctrl + N/P = scroll through options)
- \G                            = goto function
- \D                            = goto identifier as far as possible (this opens a new tab displaying the end find result; use mouse to select betwen tabs; double click green area to open a new tab/file), Ctrl + W then Q = close window
- \R                            = rename
-----------------
